<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>gov.nasa.worldwind.server</groupId>
        <artifactId>worldwind-serverkit</artifactId>
        <version>0.3.0-ALPHA2</version>
    </parent>
    
    <artifactId>worldwind-geoserver</artifactId>
    <packaging>war</packaging>
    <name>WorldWind GeoServer Application</name>
    
    <properties>
        <maven.compiler.source>1.8</maven.compiler.source>
        <maven.compiler.target>1.8</maven.compiler.target>
        
        <!--Configuration for Jetty-->
        <webappSourceDirectory>${basedir}/src/main/webapp</webappSourceDirectory>
        <sde.version>9.3</sde.version>
        <jetty.port>8080</jetty.port>
        <jetty.run.daemon>false</jetty.run.daemon>            
        <!-- dataConfigId : typically "minimal"
        dataConfigId defines the data folder template. It should match a subfolder
        under the parent folder's data folder.  Its contents will be copied into
        the war file. 
        -->
        <baseConfigId>base</baseConfigId>
        <dataConfigId>nasa</dataConfigId>
        <configDirectory>${basedir}/../data_config</configDirectory>
    </properties>    
    
    <dependencies>
        <dependency>
            <groupId>org.geoserver.web</groupId>
            <artifactId>gs-web-core</artifactId>
        </dependency>
        <dependency>
            <groupId>org.geoserver.web</groupId>
            <artifactId>gs-web-wms</artifactId>
        </dependency>
        <dependency>
            <groupId>org.geoserver.web</groupId>
            <artifactId>gs-web-gwc</artifactId>
        </dependency>
        <dependency>
            <groupId>org.geoserver.web</groupId>
            <artifactId>gs-web-wfs</artifactId>
        </dependency>
        <dependency>
            <groupId>org.geoserver.web</groupId>
            <artifactId>gs-web-wcs</artifactId>
        </dependency>
        <dependency>
            <groupId>org.geoserver.web</groupId>
            <artifactId>gs-web-demo</artifactId>
        </dependency>
        <dependency>
            <groupId>org.geoserver.web</groupId>
            <artifactId>gs-web-sec-jdbc</artifactId>
        </dependency>
        <dependency>
            <groupId>org.geoserver.web</groupId>
            <artifactId>gs-web-sec-ldap</artifactId>
        </dependency>
        <dependency>
            <groupId>org.geoserver.web</groupId>
            <artifactId>gs-web-rest</artifactId>
        </dependency>
        <dependency>
            <groupId>org.geoserver</groupId>
            <artifactId>gs-platform</artifactId>
        </dependency>
        <dependency>
            <groupId>org.geoserver</groupId>
            <artifactId>gs-main</artifactId>
        </dependency>
        <dependency>
            <groupId>org.geoserver</groupId>
            <artifactId>gs-wcs</artifactId>
        </dependency>
        <dependency>
            <groupId>org.geoserver</groupId>
            <artifactId>gs-wcs1_0</artifactId>
        </dependency>
        <dependency>
            <groupId>org.geoserver</groupId>
            <artifactId>gs-wcs1_1</artifactId>
        </dependency>
        <dependency>
            <groupId>org.geoserver</groupId>
            <artifactId>gs-wcs2_0</artifactId>
        </dependency>
        <dependency>
            <groupId>org.geoserver</groupId>
            <artifactId>gs-wfs</artifactId>
        </dependency>
        <dependency>
            <groupId>org.geoserver</groupId>
            <artifactId>gs-kml</artifactId>
        </dependency>
        <dependency>
            <groupId>org.geoserver</groupId>
            <artifactId>gs-gwc</artifactId>
        </dependency>
        <dependency>
            <groupId>org.geoserver</groupId>
            <artifactId>gs-rest</artifactId>
        </dependency>
        <dependency>
            <groupId>org.geoserver</groupId>
            <artifactId>gs-restconfig</artifactId>
        </dependency>
        <dependency>
            <groupId>org.geoserver.security</groupId>
            <artifactId>gs-sec-jdbc</artifactId>
        </dependency>
        <dependency>
            <groupId>org.geoserver.security</groupId>
            <artifactId>gs-sec-ldap</artifactId>
        </dependency>
        
        <!--Web Processing Service extension-->
        <dependency>
            <groupId>org.geoserver.extension</groupId>
            <artifactId>gs-wps-core</artifactId>
        </dependency>
        <dependency>
            <groupId>org.geoserver.extension</groupId>
            <artifactId>gs-web-wps</artifactId>
            <version>${gs.version}</version>
        </dependency>

        <!--WorldWind GeoServer WMS module-->
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>worldwind-gs-wms</artifactId>
            <version>${project.version}</version>
        </dependency>
        
        <!--WorldWind GeoServer GeoPackage extension -->
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>worldwind-gs-geopkg</artifactId>
            <version>${project.version}</version>
        </dependency>

        <!--WorldWind GeoTools GeoPackage module-->
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>worldwind-gt-geopkg</artifactId>
            <version>${project.version}</version>
        </dependency>


        <!-- GeoTools -->
        <dependency>
            <groupId>org.geotools.jdbc</groupId>
            <artifactId>gt-jdbc-postgis</artifactId>
        </dependency>
        <dependency>
            <groupId>org.geotools</groupId>
            <artifactId>gt-wfs-ng</artifactId>
        </dependency>
        <dependency>
            <groupId>org.geotools</groupId>
            <artifactId>gt-geotiff</artifactId>
        </dependency>
        <dependency>
            <groupId>org.geotools</groupId>
            <artifactId>gt-arcgrid</artifactId>
        </dependency>
        <dependency>
            <groupId>org.geotools</groupId>
            <artifactId>gt-image</artifactId>
        </dependency>
        
        <!--imagemosaic datasource module-->
        <dependency>
            <groupId>org.geotools</groupId>
            <artifactId>gt-imagemosaic</artifactId>
        </dependency>
        
        <!--JP2K based grid coverage readers-->   
        <dependency>
            <groupId>org.geotools</groupId>
            <artifactId>gt-jp2k</artifactId>
        </dependency>
        
        <!--imagepyramid datasource module-->
        <dependency>
            <groupId>org.geotools</groupId>
            <artifactId>gt-imagepyramid</artifactId>
        </dependency>    
         <!--WPS--> 
        <dependency>
            <groupId>org.geotools</groupId>
            <artifactId>gt-process-geometry</artifactId>
        </dependency>

        <dependency>
            <groupId>org.eclipse.jetty</groupId>
            <artifactId>jetty-server</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.eclipse.jetty</groupId>
            <artifactId>jetty-jndi</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.eclipse.jetty</groupId>
            <artifactId>jetty-plus</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.geoserver</groupId>
            <artifactId>gs-main</artifactId>
            <classifier>tests</classifier>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>javax.servlet-api</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>xmlunit</groupId>
            <artifactId>xmlunit</artifactId>
            <scope>test</scope>
        </dependency>
        
        <dependency>
            <groupId>org.xerial</groupId>
            <artifactId>sqlite-jdbc</artifactId>
        </dependency>
    </dependencies>
    
    
    <build>
        <plugins>
            <!--
            Run a set of ant tasks from a phase of the build.
            -->         
            <plugin>
                <artifactId>maven-antrun-plugin</artifactId>
                <executions>                    
                    <!-- Builds a valid "data" directory into the web app -->
                    <!-- In a Linux/Tomcat war file, the default embedded GeoServer 
                    data directory location is "<web application root>/data" -->
                    <execution>
                        <id>configPackage</id>
                        <phase>package</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <configuration>
                            <tasks>
                                <!-- copy the base distribution files from the config dir to the webapp dir -->
                                <echo message="Copying data dir from ${configDirectory}/${baseConfigId}" />
                                <copy todir="${webappSourceDirectory}/data">
                                    <fileset dir="${configDirectory}/${baseConfigId}" includes="**/**" />
                                </copy>
                                
                                <!-- check if the data config is available, if not fail -->
                                <available file="${configDirectory}/${dataConfigId}" property="configIsAvailable" />
                                <fail message="Unable to locate configuration: ${configDirectory}/${dataConfigId}" unless="configIsAvailable" />
                                
                                <!-- copy the data files from the config dir to the webapp dir -->
                                <echo message="Copying data dir from ${configDirectory}/${dataConfigId}" />
                                <copy todir="${webappSourceDirectory}/data">
                                    <fileset dir="${configDirectory}/${dataConfigId}" includes="**/**" />
                                </copy>
                            </tasks>
                        </configuration>
                    </execution>
                    <execution>
                        <id>configClean</id>
                        <phase>clean</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <configuration>
                            <tasks>
                                <delete dir="${webappSourceDirectory}/data" />
                            </tasks>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <!--plugin>
              <groupId>org.geoserver.maven</groupId>
              <artifactId>gs-config</artifactId>
              <version>${project.version}</version>
              <executions>
                <execution>
                  <id>configPackage</id>
                  <configuration>
                    <configDirectory>${configDirectory}</configDirectory>
                    <dataConfigId>${dataConfigId}</dataConfigId>
                  </configuration>
                  <phase>package</phase>
                  <goals>
                    <goal>config</goal>
                  </goals>
                </execution>
                <execution>
                  <id>configClean</id>
                  <phase>clean</phase>
                  <goals>
                    <goal>clean</goal>
                  </goals>
                </execution>
              </executions>
            </plugin-->

            <!--            
            The WAR Plugin is responsible for collecting all artifact dependencies, 
            classes and resources of the web application and packaging them into 
            a web application archive.
            -->
            <plugin>
                <inherited>true</inherited>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
                <configuration>
                    <warName>geoserver</warName>
                    <webappDirectory>${project.build.directory}/worldwind-geoserver</webappDirectory>
                    <packagingExcludes>WEB-INF/lib/javax.servlet-api*.jar</packagingExcludes>
                    <archive>
                        <manifest>
                            <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
                            <addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
                        </manifest>
                        <manifestEntries>
                            <GeoServerModule>core</GeoServerModule>
                            <Application-Name>${project.build.finalname}</Application-Name>
                            <Project-Version>${project.version}</Project-Version>
                            <Iteration-Name>${iteration}</Iteration-Name>
                            <Build-Timestamp>${maven.build.timestamp}</Build-Timestamp>
                            <Git-Revision>${build.commit.id}</Git-Revision>
                        </manifestEntries>
                    </archive>
                </configuration>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>war</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            
            <!--
            The Jetty Maven plugin is useful for rapid development and testing.
            To start Jetty and serve up your project execute: 
                mvn jetty:run
            Then point your browser to on http://localhost:8080/geoserver/web/
            --> 
            <plugin>
                <groupId>org.eclipse.jetty</groupId>
                <artifactId>jetty-maven-plugin</artifactId>
                <version>${jetty.version}</version>
                <!-- 
                These configuration elements set up the Jetty environment in which your webapp executes.
                -->
                <configuration>
                    <webApp>
                        <contextPath>/geoserver</contextPath>
                    </webApp>
                    <connectors>
                        <connector implementation="org.mortbay.jetty.nio.SelectChannelConnector">
                            <port>${jetty.port}</port>
                            <maxIdleTime>10000</maxIdleTime>
                        </connector>
                    </connectors>
                    <stopPort>${jetty.stopPort}</stopPort>
                    <stopKey>GEOSERVER_JETTY_STOPKEY</stopKey>
                    <daemon>false</daemon>
                    <!-- Set the GEOSERVER_DATA_DIR for the Jetty run -->
                    <systemProperties> 
                        <systemProperty> 
                            <name>GEOSERVER_DATA_DIR</name>
                            <value>${project.build.directory}/worldwind-geoserver/data</value> 
                        </systemProperty> 
                    </systemProperties>
                    
                    <!-- Make sure it's not looking for annotations everywhere -->
                    <contextXml>${project.build.testOutputDirectory}/jetty-context.xml</contextXml>
                </configuration>
            </plugin>
            
        </plugins>
    </build>
    <description>The GeoServer map server application from the WorldWind Server Kit.</description>
</project>