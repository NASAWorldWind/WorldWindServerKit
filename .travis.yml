## WorldWindServerKit (WWSK) Travis-CI build script

# Required to install the jq JSON filter used to parse GitHub API results in scripts
sudo: required

# WWSK is a Java project
language: java

jdk:
  # Define the JDK(s) to build against
  - oraclejdk8

cache:
  # Cache the local maven repository
  directories:
    - "$HOME/.m2"

before_install:
  # Remove any (cached) user-specific maven settings
  - rm ~/.m2/settings.xml
  
# Skip the default install step (mvn install) as our dependency management is done in the build step
install: true
  
before_script:
  # Install the jq shell filter so we can extract data from GitHub API JSON results
  # See apt configuration: https://docs.travis-ci.com/user/ci-environment/#apt-configuration
  - sudo apt-get install -qq jq
  - jq --version
  # Ensure scripts can be executed (required if scripts are authored in Windows)
  - chmod +x ./travis/*.sh
  
script:
  # Build the WWSK with Maven
  ## Maven Commands
  # -B (--batch-mode) Run in non-interactive model
  # -U (--update-snapshots) Forces a check for missing releases and updated snapshots on remote repos
  # -P (--activate-profiles <arg>) Comma-delimited list of profiles to activate
  # Build WWSK using the "release" profile (generates javadoc and sources)
  - mvn clean install -B -U -Prelease
  
after_success:
  # Create a draft release on GitHub in preparation for deploy
  - ./travis/create_draft_release.sh
  # - ./travis/update_release.sh

deploy: 
  # Publish artifacts to the GitHub release, by default, travis will not invoke this step for PRs.
  # Uses undocumented "draft" and "tag_name" settings to deploy without publishing.
  # See: https://github.com/travis-ci/travis-ci/issues/6132 for more info.
  - provider: releases
    api_key: $GITHUB_API_KEY
    file_glob: true
    file: worldwind-geoserver-dist/target/*.*
    skip_cleanup: true
    overwrite: true
    draft: true
    tag_name: $TRAVIS_TAG
    on:
      tags: true
      
notifications:
  # Notify the worldwind-services mailing list on every build
  email:
    recipients:
      secure: SheoPrZZHX1c70JTwoRULza5XobdTPisIgQSfpFBSjolS/Z+qJBIZkyQNKRPfzvs5FEZNBHlaXnvAEX8sUHAJtvp5A9P/c0jaZ3dA0IQ1TJCNg3XT2ZLz4R5JOQclYbgBIqr27MSmx9vvnfGUDCSKaRXdLxmB0Hun7zlkR79IEQ6lLeeB9pu7N/4vuzdmMGKU1lOWs3tmDpdeNOdgSYhKW81eX0FHrgWTXeXcv/3hhtn87XogwKdVKeYFKY+1wHUV3j+dnqeN7yMhqlpljHkOpQ5YqG7nDnPbSJZJ2NINTB/+Mus57eq67FnNl4CDAsWue97wrY8u/+mtGP0boyhXUlBaKJdJpENnuSbxLZtMzvrI5JucxgGXiKei+q84DAh1BbN0+205kBfQgh24GF68bMuKFSpJDobN6usLXVnfjnTrlrMkJQ9wGY/m8g9P9IhJpguJuhYocB6ByMOCkkeSEXdVN6Wb7MGXcfSWdnasVhqAX4yYUt34WUO+vWf842atzXWMZDyStjUe/hWQactB2FhyZBt9kIjMBMWodEhAlDPgFSzwz4huiDkAjeQSszqDQQVOXGFG+f64HhnhYElkY7F08/Yy/sI5HlQ0C0nlNXVsFZ5oHRWwyw02tVVdzNo3ho2h1NSW935S0z3rWRlNOxxKisBON0OBGgZdWJRLYc=
    on_success: always
    on_failure: always  