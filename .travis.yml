## WorldWindServerKit (WWSK) Travis-CI build script

# Required to install the jq JSON filter used to parse GitHub API results in scripts
sudo: required

# WWSK is a Java project
language: java

jdk:
  # Define the JDK(s) to build against
  - oraclejdk8

cache:
  # Cache the local maven repository
  directories:
    - "$HOME/.m2"

before_install:
  # Remove any (cached) user-specific maven settings
  - rm ~/.m2/settings.xml
  
# Skip the default install step (mvn install) as our dependency management is done in the build step
install: true
  
before_script:
  # Prepare the Travis build environment
  - ./travis/prepare_environment.sh  
  
script:
  # Build the WWSK with Maven
  #
  ## Maven Phases
  # validate: validate the project
  # clean:    cleans up artifacts by prior builds
  # compile:  compile the source
  # test:     test the compiled code using unit testing framework
  # package:  package compile code into dist. formats, (e.g., JAR files)
  # integration_test: deploy package to where integration tests can be run
  # verify:   run any checks to verify the package is valid
  # install:  install the package into the local repository
  # deploy:   copies the final package to the remote repository
  # site:     generates the site documentation
  ## Maven Commands
  # -B (--batch-mode) Run in non-interactive model
  # -U (--update-snapshots) Forces a check for missing releases and updated snapshots on remote repos
  # -T2 (--threads <arg>) Thread count: 2
  # -fae (--fail-at-end) Only fail the build afterwards; allow non-impacted builds to continue
  # -P (--activate-profiles <arg>) Comma-delimited list of profiles to activate
  #
  # Build WWSK using the "release" profile (generates javadoc and sources)
  - mvn clean install -B -U -T2 -Prelease
  
after_success:
  # Upload distibutions to GitHub releases, depending on what initiated the build
  - ./travis/update_release.sh
  